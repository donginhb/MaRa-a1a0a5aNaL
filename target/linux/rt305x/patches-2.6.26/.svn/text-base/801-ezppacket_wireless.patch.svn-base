--- linux-2.6.26.old/drivers/net/wireless/rt2860v2/ap/ap_cfg.c	2013-01-11 14:09:42.963110254 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2/ap/ap_cfg.c	2013-01-11 13:34:31.552054443 +0800
@@ -8613,8 +8613,12 @@
 				{
 					AtoH(this_char, temp, 2);
 					eepAddr = *temp*256 + temp[1];					
+					/* EZPacket
+					 * Limit EEPROM read range to 0x100
 					if (eepAddr < 0xFFFF)
-					{
+					 */
+					if (eepAddr < 0x0100)
+					{ /* Limit access range to 0x0100 */
 						RT28xx_EEPROM_READ16(pAdapter, eepAddr, eepValue);
 						sprintf(msg+strlen(msg), "[0x%04X]:0x%04X  ", eepAddr , eepValue);
 					}
@@ -8671,6 +8675,14 @@
 				AtoH(this_char, temp, 2);
 				eepAddr = *temp*256 + temp[1];
 
+				/* EZPacket
+				 * Limit EEPROM read range to 0x100
+				 */
+				if (eepAddr > 0x00ff)
+				{ /* Limit access range to 0x0100 */
+					break;
+				}
+
 				AtoH(temp2, temp, 2);
 				eepValue = *temp*256 + temp[1];
 


--- linux-2.6.26.old/drivers/net/wireless/rt2860v2/common/ee_flash.c	2013-01-11 14:09:46.333111760 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2/common/ee_flash.c	2013-01-11 13:34:34.802056168 +0800
@@ -28,6 +28,8 @@
 
 
 #include	"rt_config.h"
+extern void RtmpFlashWrite(UCHAR * p, ULONG a, ULONG b);
+extern void RtmpFlashRead(UCHAR * p, ULONG a, ULONG b);
 
 /* The definition of the EeBuffer[] located in chips/rtxxxx.c */
 /*extern UCHAR EeBuffer[EEPROM_SIZE];*/


--- linux-2.6.26.old/drivers/net/wireless/rt2860v2/common/rtmp_init_inf.c	2013-01-11 14:09:48.463111969 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2/common/rtmp_init_inf.c	2013-01-11 13:34:37.772057215 +0800
@@ -104,6 +104,170 @@
 #endif /* OS_ABL_FUNC_SUPPORT */
 #endif /* LINUX */
 
+/* EZPacket */
+struct proc_dir_entry *proc_mach_id;
+#ifndef CONFIG_RALINK_RT3052
+struct proc_dir_entry *proc_rewind;
+#endif
+
+int ezp_machine_id_proc_read(char *page, char **start, off_t offset, int count, int *eof, void *data)
+{
+    char *p = page;
+    int len;
+    USHORT mac01, mac23, mac45;
+    PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)data;
+    
+#ifndef CONFIG_RALINK_RT3052
+    /* If we didn't do authentication, then use factory MAC address,
+     * this is used for mini-PCI card */
+    USHORT flag;
+    RT28xx_EEPROM_READ16(pAd, 0x160, flag);
+    if (flag == (USHORT)0x00) {
+        DBGPRINT(RT_DEBUG_TRACE, ("Get the old MAC address.\n"));
+        RT28xx_EEPROM_READ16(pAd, 0x04, mac01);
+        RT28xx_EEPROM_READ16(pAd, 0x06, mac23);
+        RT28xx_EEPROM_READ16(pAd, 0x08, mac45);
+    } else {
+        DBGPRINT(RT_DEBUG_TRACE, ("Get the new MAC address.\n"));
+        RT28xx_EEPROM_READ16(pAd, 0x162, mac01);
+        RT28xx_EEPROM_READ16(pAd, 0x164, mac23);
+        RT28xx_EEPROM_READ16(pAd, 0x166, mac45);
+    }
+#else
+    RT28xx_EEPROM_READ16(pAd, 0x162, mac01);
+    RT28xx_EEPROM_READ16(pAd, 0x164, mac23);
+    RT28xx_EEPROM_READ16(pAd, 0x166, mac45);
+#endif
+    
+    p += sprintf(p, "%02X:%02X:%02X:%02X:%02X:%02X\n", 
+                        (UCHAR)(mac01 & 0xff), (UCHAR)(mac01 >> 8),
+                        (UCHAR)(mac23 & 0xff), (UCHAR)(mac23 >> 8),
+                        (UCHAR)(mac45 & 0xff), (UCHAR)(mac45 >> 8));
+    
+    len = (p - page) - offset;
+    if (len < 0) {
+        len = 0;
+    }
+    *eof = (len <= count) ? 1 : 0;
+    *start = page + offset;
+    
+    return len;
+}
+
+#define EZP_WRITE_MAX_SIZE 64
+
+int ezp_machine_id_proc_write(struct file *file, const char *buffer, unsigned long count, void *data)
+{
+    char p[EZP_WRITE_MAX_SIZE];
+    USHORT mac01, mac23, mac45;
+    PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)data;
+    char *start, *end;
+    
+    DBGPRINT(RT_DEBUG_TRACE, ("ezp_machine_id_proc_write()\n"));
+
+    if (!count) {
+        return -EINVAL;
+    }
+
+    if (count > EZP_WRITE_MAX_SIZE) {
+        count = EZP_WRITE_MAX_SIZE;
+    }
+    
+    /* Copy the data from user space. */
+    if (copy_from_user(p, buffer, count)) {
+        return -EFAULT;
+    }
+    
+    /* 
+     * Write the machine id by sending "ezpacket:XX:XX:XX:XX:XX:XX".
+     * 8 + 1
+     * 8 + 1 + 2 + 1
+     * 8 + 1 + 2 + 1 + 2 + 1
+     * 8 + 1 + 2 + 1 + 2 + 1 + 2 + 1
+     * 8 + 1 + 2 + 1 + 2 + 1 + 2 + 1 + 2 + 1
+     */
+    if (!strncmp(p, "ezpacket", 8)) {
+        start = p + 9;
+        end = start + 2;
+        mac01 = ((USHORT) simple_strtol(start, &end, 16));
+
+        start = p + 12;
+        end = start + 2;
+        mac01 |= (((USHORT) simple_strtol(start, &end, 16)) << 8);
+
+        start = p + 15;
+        end = start + 2;
+        mac23 = ((USHORT) simple_strtol(start, &end, 16));
+
+        start = p + 18;
+        end = start + 2;
+        mac23 |= (((USHORT) simple_strtol(start, &end, 16)) << 8);
+
+        start = p + 21;
+        end = start + 2;
+        mac45 = ((USHORT) simple_strtol(start, &end, 16));
+
+        start = p + 24;
+        end = start + 2;
+        mac45 |= (((USHORT) simple_strtol(start, &end, 16)) << 8);
+
+        RT28xx_EEPROM_WRITE16(pAd, 0x162, mac01);
+        RT28xx_EEPROM_WRITE16(pAd, 0x164, mac23);
+        RT28xx_EEPROM_WRITE16(pAd, 0x166, mac45);
+
+        /* Set the flag */
+        RT28xx_EEPROM_WRITE16(pAd, 0x160, (USHORT)0x01);
+    }
+    
+    return count;
+}
+
+#ifndef CONFIG_RALINK_RT3052
+int ezp_rewind_proc_write(struct file *file, const char *buffer, unsigned long count, void *data)
+{
+    char p[EZP_WRITE_MAX_SIZE];
+    USHORT flag, mac01, mac23, mac45;
+    PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)data;
+    
+    DBGPRINT(RT_DEBUG_TRACE, ("ezp_rewind_proc_write()\n"));
+
+    if (!count) {
+        return -EINVAL;
+    }
+    if (count > EZP_WRITE_MAX_SIZE) {
+        count = EZP_WRITE_MAX_SIZE;
+    }
+    
+    /* Copy the data from user space. */
+    if (copy_from_user(p, buffer, count)) {
+        return -EFAULT;
+    }
+    
+    RT28xx_EEPROM_READ16(pAd, 0x160, flag);
+    /* The value at 0x160 indicates whether the old MAC address saves at
+     * 0x162.
+     */
+    if (p[0] == '1' && flag == (USHORT)0x01) {
+        RT28xx_EEPROM_READ16(pAd, 0x162, mac01);
+        RT28xx_EEPROM_READ16(pAd, 0x164, mac23);
+        RT28xx_EEPROM_READ16(pAd, 0x166, mac45);
+
+        DBGPRINT(RT_DEBUG_TRACE, 
+                 ("Rewind the MAC address to %02X:%02X:%02X:%02X:%02X:%02X\n",
+                                (UCHAR)(mac01 & 0xff), (UCHAR)(mac01 >> 8),
+                                (UCHAR)(mac23 & 0xff), (UCHAR)(mac23 >> 8),
+                                (UCHAR)(mac45 & 0xff), (UCHAR)(mac45 >> 8)));
+        
+        RT28xx_EEPROM_WRITE16(pAd, 0x04, mac01);
+        RT28xx_EEPROM_WRITE16(pAd, 0x06, mac23);
+        RT28xx_EEPROM_WRITE16(pAd, 0x08, mac45);
+        /* Reset the flag */
+        RT28xx_EEPROM_WRITE16(pAd, 0x160, (USHORT)0x00);
+    }
+    
+    return count;
+}
+#endif
 
 int rt28xx_init(
 	IN VOID		*pAdSrc,
@@ -647,6 +811,36 @@
 
 	DBGPRINT_S(Status, ("<==== rt28xx_init, Status=%x\n", Status));
 
+#ifdef CONFIG_PROC_FS
+	DBGPRINT_S(Status, ("<==== rt28xx_init, Status111=%x\n", Status));
+#else
+	DBGPRINT_S(Status, ("<==== rt28xx_init, Status222=%x\n", Status));
+#endif
+    /* EZPacket */
+#ifdef CONFIG_PROC_FS
+    /* Assign proc entry to access machine id from wireless MAC */
+
+    proc_mach_id = create_proc_entry("ezp_machine_id", 0644, NULL);
+    if (proc_mach_id) {
+        proc_mach_id->read_proc = &ezp_machine_id_proc_read;
+        proc_mach_id->write_proc = &ezp_machine_id_proc_write;
+        proc_mach_id->data = (void *)pAd;
+        DBGPRINT_S(Status, ("<==== rt28xx_init, proc=%x pread=%x pwrite=%x pdata=%x\n", 
+                    proc_mach_id, proc_mach_id->read_proc, proc_mach_id->write_proc, proc_mach_id->data));
+    } else {
+       printk("ezp_proc machine id create fail\n");
+    }
+#ifndef CONFIG_RALINK_RT3052
+    proc_rewind = create_proc_entry("ezp_rewind", 0644, NULL);
+    if (proc_rewind) {
+        proc_rewind->write_proc = &ezp_rewind_proc_write;
+        proc_rewind->data = (void *)pAd;
+    } else {
+        printk("ezp_proc proc rewind create fail\n");
+    }
+#endif
+#endif
+
 	return TRUE;
 
 err6:


--- linux-2.6.26.old/drivers/net/wireless/rt2860v2/include/iface/rtmp_rbs.h	2013-01-11 14:09:52.143115014 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2/include/iface/rtmp_rbs.h	2013-01-11 13:34:41.652059413 +0800
@@ -48,43 +48,43 @@
   ************************************************************************/
 #if defined(CONFIG_RALINK_RT3050_1T1R)
 #if defined(CONFIG_RALINK_RT3350)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT3350_AP_1T1R_V1_0.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT3350_AP_1T1R_V1_0.bin"
 #else
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT3050_AP_1T1R_V1_0.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT3050_AP_1T1R_V1_0.bin"
 #endif /* CONFIG_RALINK_RT3350 */
 #endif /* CONFIG_RALINK_RT3050_1T1R */
 
 #if defined(CONFIG_RALINK_RT3051_1T2R)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT3051_AP_1T2R_V1_0.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT3051_AP_1T2R_V1_0.bin"
 #endif /* CONFIG_RALINK_RT3051_1T2R */
 
 #if defined(CONFIG_RALINK_RT3052_2T2R)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT3052_AP_2T2R_V1_1.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT3052_AP_2T2R_V1_1.bin"
 #endif /* CONFIG_RALINK_RT3052_2T2R */
 
 #if defined(CONFIG_RALINK_RT3883_3T3R)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT3883_AP_3T3R_V0_1.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT3883_AP_3T3R_V0_1.bin"
 #endif /* CONFIG_RALINK_RT3883_3T3R */
 
 #if defined(CONFIG_RALINK_RT3662_2T2R)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT3662_AP_2T2R_V0_0.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT3662_AP_2T2R_V0_0.bin"
 #endif /* CONFIG_RALINK_RT3662_2T2R */
 
 #if defined(CONFIG_RALINK_RT3352_2T2R)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT3352_AP_2T2R_V11.BIN"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT3352_AP_2T2R_V11.BIN"
 #endif /* CONFIG_RALINK_RT3352_2T2R */
 
 #if defined(CONFIG_RALINK_RT5350_1T1R)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT5350_AP_1T1R_V1_0.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT5350_AP_1T1R_V1_0.bin"
 #endif // CONFIG_RALINK_RT5350_1T1R //
 
 #if defined(CONFIG_RT2860V2_2850)
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT2880_RT2850_AP_2T3R_V1_6.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT2880_RT2850_AP_2T3R_V1_6.bin"
 #endif /* CONFIG_RT2860V2_2850 */
 
 #ifndef EEPROM_DEFAULT_FILE_PATH
 /* RFIC 2820 */
-#define EEPROM_DEFAULT_FILE_PATH                     "/etc_ro/wlan/RT2880_RT2820_AP_2T3R_V1_6.bin"
+#define EEPROM_DEFAULT_FILE_PATH                     "/etc/wl/RT2880_RT2820_AP_2T3R_V1_6.bin"
 #endif /* EEPROM_DEFAULT_FILE_PATH */
 
 #if defined (CONFIG_RT2880_FLASH_32M)


--- linux-2.6.26.old/drivers/net/wireless/rt2860v2/include/os/rt_linux.h	2013-01-11 14:09:52.813114624 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2/include/os/rt_linux.h	2013-01-11 13:34:42.212060019 +0800
@@ -137,7 +137,8 @@
 /* This used for rbus-based chip, maybe we can integrate it together. */
 //#define RTMP_FIRMWARE_FILE_NAME		"/etc_ro/Wireless/RT2860AP/RT2860AP.bin"
 #define PROFILE_PATH			"/etc/Wireless/RT2860i.dat"
-#define AP_PROFILE_PATH_RBUS		"/etc/Wireless/RT2860/RT2860.dat"
+/* EZP */
+#define AP_PROFILE_PATH_RBUS		"/etc/wl/RT2860AP.dat"
 #define RT2880_AP_DRIVER_VERSION	"1.0.0.0"
 #endif /* RTMP_RBUS_SUPPORT */
 #endif /* CONFIG_AP_SUPPORT */


--- linux-2.6.26.old/drivers/net/wireless/rt2860v2/os/linux/rt_main_dev.c	2013-01-11 14:09:55.693116719 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2/os/linux/rt_main_dev.c	2013-01-11 13:34:45.162060999 +0800
@@ -203,6 +203,14 @@
 
 	DBGPRINT(RT_DEBUG_TRACE, ("===> rt28xx_close\n"));
 
+    /* EZP Remove proc */
+#ifdef CONFIG_PROC_FS
+        remove_proc_entry("ezp_machine_id", NULL);
+#ifndef CONFIG_RALINK_RT3052
+        remove_proc_entry("ezp_rewind", NULL);
+#endif 
+#endif 
+ 
 	/* Sanity check for pAd */
 	if (pAd == NULL)
 		return 0; /* close ok */


--- linux-2.6.26.old/drivers/net/wireless/rt2860v2_ap/Kconfig	2013-01-11 14:09:58.723117140 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2_ap/Kconfig	2013-01-11 13:34:48.162062134 +0800
@@ -1,6 +1,5 @@
 config RT2860V2_AP
 	tristate "Ralink RT2860 802.11n AP support"
-	depends on NET_RADIO 
 	
 config RT2860V2_AP_V24_DATA_STRUCTURE
 	bool


--- linux-2.6.26.old/drivers/net/wireless/rt2860v2_sta/Kconfig	2013-01-11 14:09:58.793117714 +0800
+++ linux-2.6.26/drivers/net/wireless/rt2860v2_sta/Kconfig	2013-01-11 13:34:48.302063598 +0800
@@ -1,6 +1,5 @@
 config RT2860V2_STA
 	tristate "Ralink RT2860 802.11n STA support"
-	depends on NET_RADIO 
 
 config  RT2860V2_STA_WPA_SUPPLICANT
 	bool "WPA Supplicant"
